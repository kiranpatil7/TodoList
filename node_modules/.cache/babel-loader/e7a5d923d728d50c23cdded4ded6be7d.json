{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React_practical\\\\react\\\\confusion\\\\src\\\\components\\\\DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardTitle, CardText, CardImg, BreadcrumbItem, Breadcrumb } from 'reactstrap';\nimport { Link } from 'react-router-dom'; //import Comment from './CommentForm';\n\nimport { Modal, ModalHeader, ModalBody, Button, Row, Col, Label } from 'reactstrap';\nimport { LocalForm, Control, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.commentDisplay = values => {\n      //  console.log('Current State is: ' + JSON.stringify(values));\n      this.commenentModal();\n      this.props.addComment(this.props.dishId, values.rating, values.author, values.comment); // alert('Current State is: ' + JSON.stringify(values));\n    };\n\n    this.state = {\n      open: false\n    };\n    this.commenentModal = this.commenentModal.bind(this);\n    this.commentDisplay = this.commentDisplay.bind(this);\n  }\n\n  commenentModal() {\n    //alert(\"hiii\");\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: this.commenentModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), \" Submit Comment\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.open,\n      toggle: this.commenentModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.commenentModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.commentDisplay(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, \"Rating\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      name: \"rating\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }, \"5\"))), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"yourname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, \"Your Name\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".yourname\",\n      id: \"yourname\",\n      name: \"yourname\",\n      className: \"form-control\",\n      placeholder: \"Your Name\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".yourname\",\n      show: \"touched\",\n      messages: {\n        required: 'Required,',\n        minLength: 'Must be greater than 2 characters',\n        maxLength: 'Must be 15 characters or less'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".message\",\n      id: \"message\",\n      name: \"message\",\n      rows: \"6\",\n      className: \"form-control\",\n      validators: {\n        required\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      show: \"touched\",\n      model: \".message\",\n      messages: {\n        required: \"Write Something\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, \"Submit\")))))));\n  }\n\n}\n\nfunction RenderDish({\n  details\n}) {\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    src: details.image,\n    alt: details.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, details.name), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, details.description)));\n}\n\nfunction RenderComments({\n  comments,\n  addComment,\n  dishId\n}) {\n  //return (<h2>{comments.comment}</h2>);\n  if (comments != null) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, comments.map(com => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: com.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      }, com.comment), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, \"-- \", com.author, \" ,\", new Intl.DateTimeFormat('en-us', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(com.date)))));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CommentForm, {\n      dishId: dishId,\n      addComment: addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, \"Be the first one who writes a comment!\");\n  }\n}\n\nconst DishDetail = props => {\n  if (props.details != null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 41\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, props.details.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, props.details.name), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RenderDish, {\n      details: props.details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RenderComments, {\n      comments: props.comments,\n      addComment: props.addComment,\n      dishId: props.details.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 26\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 22\n      }\n    }, \"From Menu\"));\n  }\n}; // let comments = detail.comments.map((comment) => {\n//     return (\n//         <>\n//             <p>{comment.comment}</p>\n//             <p>-- {comment.author}, {comment.date}</p>\n//         </>\n//     )\n// });\n// return (\n//     <div className=\"container\">\n//         <div className=\"row\">\n//             <div className=\"col-12 col-md-5 m-1\">\n//                 <Card>\n//                     <CardImg width=\"100%\" src={detail.image} alt={detail.name}></CardImg>\n//                     <div>\n//                         <CardBody>\n//                             <CardTitle>{detail.name}</CardTitle>\n//                             <CardText>{detail.description}</CardText>\n//                         </CardBody>\n//                     </div>\n//                 </Card>\n//             </div>\n//             <div className=\"col-12 col-md-5 m-1\">\n//                 <h3>Comments</h3>\n//                 {/* {comments} */}\n//             </div>\n//         </div>\n//     </div>\n// );\n\n\nexport default DishDetail;","map":{"version":3,"sources":["D:/Project/React_practical/react/confusion/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardBody","CardTitle","CardText","CardImg","BreadcrumbItem","Breadcrumb","Link","Modal","ModalHeader","ModalBody","Button","Row","Col","Label","LocalForm","Control","Errors","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","commentDisplay","values","commenentModal","addComment","dishId","rating","author","comment","state","open","bind","setState","render","RenderDish","details","image","name","description","RenderComments","comments","map","com","id","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardBody, CardTitle, CardText, CardImg, BreadcrumbItem, Breadcrumb } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n//import Comment from './CommentForm';\r\nimport { Modal, ModalHeader, ModalBody, Button, Row, Col, Label } from 'reactstrap';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false\r\n        };\r\n        this.commenentModal = this.commenentModal.bind(this);\r\n        this.commentDisplay = this.commentDisplay.bind(this);\r\n    };\r\n    commenentModal() {\r\n\r\n        //alert(\"hiii\");\r\n        this.setState({\r\n            open: !this.state.open\r\n\r\n        });\r\n    }\r\n    commentDisplay = (values) => {\r\n        //  console.log('Current State is: ' + JSON.stringify(values));\r\n        this.commenentModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        // alert('Current State is: ' + JSON.stringify(values));\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.commenentModal}>\r\n                    <span className=\"fa fa-pencil fa-lg \"></span> Submit Comment\r\n                </Button>\r\n\r\n                <Modal isOpen={this.state.open} toggle={this.commenentModal}>\r\n                    <ModalHeader toggle={this.commenentModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.commentDisplay(values)}>\r\n                            <Label htmlFor=\"rating\">Rating</Label>\r\n                            <Row className=\"form-group m-1\">\r\n                                <Control.select model=\".rating\" name=\"rating\"\r\n\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n\r\n                                </Control.select >\r\n                            </Row>\r\n                            <Label htmlFor=\"yourname\">Your Name</Label>\r\n                            <Row className=\"form-group m-1\">\r\n                                <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Your Name\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }} />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".yourname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required,',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n\r\n                            </Row>\r\n\r\n                            <Label htmlFor=\"message\">Comment</Label>\r\n                            <Row className=\"form-group m-1\">\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required\r\n\r\n                                    }}\r\n\r\n                                ></Control.textarea>\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    show=\"touched\"\r\n                                    model=\".message\"\r\n                                    messages={{\r\n                                        required: \"Write Something\"\r\n                                    }} />\r\n\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n\r\n                    </ModalBody>\r\n\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction RenderDish({ details }) {\r\n    return (\r\n\r\n        <Card>\r\n            <CardImg src={details.image} alt={details.name} />\r\n            <CardBody>\r\n                <CardTitle>{details.name}</CardTitle>\r\n                <CardText>{details.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    );\r\n}\r\nfunction RenderComments({ comments, addComment, dishId }) {\r\n    //return (<h2>{comments.comment}</h2>);\r\n    if (comments != null) {\r\n\r\n\r\n        return (\r\n            <>\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled \">\r\n                    {comments.map((com) => {\r\n                        return (\r\n                            <li key={com.id}>\r\n                                <p>{com.comment}</p>\r\n                                <p>-- {com.author} ,\r\n                                  {new Intl.DateTimeFormat('en-us', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(com.date)))}</p>\r\n\r\n                            </li>\r\n\r\n                        );\r\n\r\n                    })}\r\n\r\n                </ul>\r\n                <div>\r\n                    <CommentForm dishId={dishId} addComment={addComment} />\r\n                </div>\r\n\r\n\r\n\r\n            </>\r\n        );\r\n\r\n    }\r\n    else {\r\n        return (\r\n            <div>Be the first one who writes a comment!</div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.details != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.details.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.details.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish details={props.details} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        {<RenderComments comments={props.comments}\r\n                            addComment={props.addComment}\r\n                            dishId={props.details.id} />}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div >\r\n\r\n\r\n        );\r\n\r\n    }\r\n    else {\r\n        return (<div><h2>From Menu</h2></div>)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n// let comments = detail.comments.map((comment) => {\r\n//     return (\r\n//         <>\r\n//             <p>{comment.comment}</p>\r\n//             <p>-- {comment.author}, {comment.date}</p>\r\n//         </>\r\n//     )\r\n// });\r\n// return (\r\n//     <div className=\"container\">\r\n//         <div className=\"row\">\r\n//             <div className=\"col-12 col-md-5 m-1\">\r\n//                 <Card>\r\n//                     <CardImg width=\"100%\" src={detail.image} alt={detail.name}></CardImg>\r\n//                     <div>\r\n//                         <CardBody>\r\n//                             <CardTitle>{detail.name}</CardTitle>\r\n//                             <CardText>{detail.description}</CardText>\r\n//                         </CardBody>\r\n//                     </div>\r\n//                 </Card>\r\n//             </div>\r\n//             <div className=\"col-12 col-md-5 m-1\">\r\n//                 <h3>Comments</h3>\r\n//                 {/* {comments} */}\r\n//             </div>\r\n//         </div>\r\n//     </div>\r\n\r\n// );\r\n\r\nexport default DishDetail;  "]},"metadata":{},"sourceType":"module"}