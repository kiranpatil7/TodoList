{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Dishes = (state = {\n  isLoading: true,\n  errMess: null,\n  dishes: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload\n      };\n\n    case ActionTypes.DISHES_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        dishes: []\n      };\n\n    case ActionTypes.DISHES_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/Project/React_practical/react/confusion/src/redux/dishes.js"],"names":["ActionTypes","Dishes","state","isLoading","errMess","dishes","action","type","ADD_DISHES","payload","DISHES_LOADING","DISHES_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAG;AAC3BC,EAAAA,SAAS,EAAE,IADgB;AACVC,EAAAA,OAAO,EAAE,IADC;AACKC,EAAAA,MAAM,EAAE;AADb,CAAT,EAEnBC,MAFmB,KAER;AACV,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,UAAjB;AACI,aAAO,EAAE,GAAGN,KAAL;AAAYC,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAE,IAAvC;AAA6CC,QAAAA,MAAM,EAAEC,MAAM,CAACG;AAA5D,OAAP;;AACJ,SAAKT,WAAW,CAACU,cAAjB;AACI,aAAO,EAAE,GAAGR,KAAL;AAAYC,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAAP;;AACJ,SAAKL,WAAW,CAACW,aAAjB;AACI,aAAO,EAAE,GAAGT,KAAL;AAAYC,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAA9C,OAAP;;AACJ;AACI,aAAOP,KAAP;AARR;AAUH,CAbM","sourcesContent":["import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true, errMess: null, dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: [] };\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}